{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timer","timerId","setInterval","date","Date","setState","toLocaleTimeString","console","log","this","clearInterval","className","props","name","React","Component","App","isClockVisible","randomizeClockName","Math","floor","random","changeClockVisibility","prevState","_prevProps","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAYaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,KACNC,MAAO,MAHX,uDAME,WAAqB,IAAD,OACZC,EAAUC,aAAY,WAC1B,IAAMC,EAAa,IAAIC,KAEvB,EAAKC,SAAS,CACZN,KAAMI,EAAKG,qBACXN,MAAOC,IAGTM,QAAQC,IAAIL,EAAKG,wBAChB,OAhBP,kCAmBE,WAC2B,OAArBG,KAAKX,MAAME,OACbU,cAAcD,KAAKX,MAAME,SArB/B,oBAyBE,WACE,OACE,qCACE,oBAAIW,UAAU,cAAd,SAA6BF,KAAKG,MAAMC,OACxC,mBAAG,UAAQ,OAAOF,UAAU,QAA5B,SACGF,KAAKX,MAAMC,cA9BtB,GAA2Be,IAAMC,WCH3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBJ,KAAM,e,EAURK,mBAAqB,WACnB,EAAKb,SAAS,CAAEQ,KAAMM,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAGxCC,sBAAwB,WACtB,EAAKjB,UAAS,SACZkB,GADY,MAER,CAAEN,gBAAiBM,EAAUN,oB,wDAdrC,SAAmBO,EAAgBD,GAC7BA,EAAUV,OAASJ,KAAKX,MAAMe,MAEhCN,QAAQC,IAAR,iCAAsCe,EAAUV,KAAhD,eAA2DJ,KAAKX,MAAMe,S,oBAc1E,WACE,MAAiCJ,KAAKX,MAA9BmB,EAAR,EAAQA,eAAgBJ,EAAxB,EAAwBA,KAExB,OACE,sBAAKF,UAAU,MAAf,UACGM,GACC,cAAC,EAAD,CAAOJ,KAAMA,IAEf,sBAAKF,UAAU,UAAf,UACE,wBACEc,KAAK,SACLd,UAAS,oCAEPM,EACJ,qBACA,sBAGES,QAASjB,KAAKa,sBAThB,SAWGL,EACG,aACA,qBAELA,GACC,wBACEQ,KAAK,SACLd,UAAU,kCACVe,QAASjB,KAAKS,mBAHhB,mD,GAhDMJ,IAAMC,WA+DTC,ICrEfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ae0f0b5.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string | number;\n};\n\ntype State = {\n  time: null | string;\n  timer: null | number | NodeJS.Timer;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: null,\n    timer: null,\n  };\n\n  componentDidMount() {\n    const timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({\n        time: date.toLocaleTimeString(),\n        timer: timerId,\n      });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer !== null) {\n      clearInterval(this.state.timer);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"clock__name\">{this.props.name}</h1>\n        <p data-cy=\"time\" className=\"clock\">\n          {this.state.time}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  name: string | number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    name: 'React Clock',\n  };\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    if (prevState.name !== this.state.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Clock was renamed from ${prevState.name} to ${this.state.name}`);\n    }\n  }\n\n  randomizeClockName = () => {\n    this.setState({ name: Math.floor(Math.random() * 100) });\n  };\n\n  changeClockVisibility = () => {\n    this.setState((\n      prevState,\n    ) => ({ isClockVisible: !prevState.isClockVisible }));\n  };\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible && (\n          <Clock name={name} />\n        )}\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              `clock-button\n            ${isClockVisible\n        ? 'clock-button--hide'\n        : 'clock-button--show'\n      }`\n            }\n            onClick={this.changeClockVisibility}\n          >\n            {isClockVisible\n              ? 'Hide Clock'\n              : 'What time is it?'}\n          </button>\n          {isClockVisible && (\n            <button\n              type=\"button\"\n              className=\"clock-button clock-button--name\"\n              onClick={this.randomizeClockName}\n            >\n              Set Random Number as a name\n            </button>\n          )}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}